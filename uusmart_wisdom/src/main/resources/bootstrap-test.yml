spring.application.name : uusmart-wisdom-test
server.port :  9104
#${random.int[9000,9999]}
eureka.client.service-url.defaultZone: http://goodtime-iot.com:9001/eureka/

#Ribbon的负载均衡策略
ribbon.NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
ribbon.MaxAutoRetriesNextServer: 0

spring.jpa.properties.hibernate.hbm2ddl.auto: update

spring.datasource.url: jdbc:mysql://goodtime-iot.com:3306/uusmart?useUnicode=true&characterEncoding=utf8&useSSL=false&verifyServerCertificate=false
spring.datasource.username: root
spring.datasource.password: LiangCan123456
spring.datasource.driverClassName: com.mysql.jdbc.Driver
spring.datasource.type: com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大
spring.datasource.initialSize: 5
spring.datasource.minIdle: 5
spring.datasource.maxActive: 20
# 配置获取连接等待超时的时间
spring.datasource.maxWait: 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis: 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis: 300000
spring.datasource.validationQuery: SELECT 'x'
spring.datasource.testWhileIdle: true
spring.datasource.testOnBorrow: false
spring.datasource.testOnReturn: false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements: true
spring.datasource.maxPoolPreparedStatementPerConnectionSize: 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters: stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat: true
spring.jpa.database: MYSQL
spring.jpa.show-sql: false
spring.jpa.hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto: update
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults: true
init-db:  true



feign.hystrix.enabled: true

# 关于springcloud-hystrix机制 http://www.jianshu.com/p/b8d21248c9b1
hystrix.command.default.execution.isolation.strategy:  SEMAPHORE
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 5000

#txmanager地址
tm.manager.url: http://goodtime-iot.com:8899/tx/manager/


logging.level.com.codingapi: debug


spring.rabbitmq.host: goodtime-iot.com
spring.rabbitmq.port: 5672
spring.rabbitmq.username: admin
spring.rabbitmq.password: 123456


#用户请求SSID redis保存前缀
diy.redis.prefix.appssid: app:ssid
# ssid 的有效时间，单位：秒
diy.redis.appssid.validity.time: 180



#用户登录信息 redis保存前缀
diy.redis.prefix.login.token: app:login:token
# token 的有效时间，单位：天
diy.redis.token.validit.time: 3


#用户保存校验码信息 redis保存前缀
diy.redis.prefix.check_code: app:check_code
# checkCode 的有效时间，单位：分钟
diy.redis.check_code.validit.time: 5

# ssid 的有效时间，单位：秒
diy.redis.prefix.mqtt.msg.id: mqtt:msg:id


#用户保存邮箱发送次数信息 redis保存前缀
diy.redis.prefix.check_email_number: app:check_email
# email 的有效邮箱数量，单位：每天支持N条
diy.redis.check_code.validit.number: 5

#MQTT每条消息的等待响应超时时间 2秒
dir.mqtt.push.msg.timeOut: 2000
#MQTT每条消息重发次数为 2次
dir.mqtt.repush.msg.number: 2
#MQTT每条消息回复查询间隔 100 毫秒
dir.mqtt.check.msg.number: 100
spring.redis.host: goodtime-iot.com
spring.redis.stimeout: 5000 # 连接超时时间（毫秒）
spring.redis.pool.max-active: 1100  # 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-idle: 20     # 连接池中的最大空闲连接
spring.redis.pool.min-idle: 5     # 连接池中的最小空闲连接 rm-0xi3946z04807h3r95o.mysql.rds.aliyuncs.com
spring.redis.pool.max-wait: 10000   # 连接池最大阻塞等待时间（使用负值表示没有限制）
# HTTP协议版本
diy.tcp.agreement.version: 0.0.1


# HTTP协议版本
diy.http.agreement.version: 0.0.1

#token 加密密钥
token.aes.pwd: liangshuai

# APP 稳点版本下载地址
diy.app.up.url.android: https://www.baidu.com/android
diy.app.up.url.ios: https://www.baidu.com/ios
diy.app.up.url.all: https://www.baidu.com/all

management:
  security:
    enabled: false

# 多个tcp地址 XX.XX.XX.XX, XX.XX.XX.XX
mqtt:
    urls : tcp://goodtime-iot.com:1883
    client:
        id : s/wisdomSer
        topic : s/wisdomSer,w/+